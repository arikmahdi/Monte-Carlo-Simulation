# -*- coding: utf-8 -*-
"""Assignment 2_i.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1StV4V_c50Y5piSpznVErC30VCVsjQxJY
"""

import random
import math
import matplotlib.pyplot as plt
random.seed(0)

"""r=float(input("Enter Randius of the Cirle :"))
cx=int(input("Enter Center of circle x_value :"))
cy=int(input("Enter Center of circle y_value :"))
"""
r=3              #radius of circle
cx=0             #center x value of circle
cy=0             #center y value of circle
print("---------------------------------------------------------------")
n=[100,1000,5000,10000]
PI_list=[]
h1=[]
h2=[]
m1=[]
m2=[]
area_list=[]
length=len(n)
area_square=60   #square area: length*width
j=0
for i in range(length):
  trials=n[j]
  j=j+1
  hits=0
  h1.clear()
  h2.clear()
  m1.clear()
  m2.clear()
  for k in range(trials):
    x=random.uniform(-3,3)
    y=random.uniform(-5,5)
    if math.sqrt((x-cx)**2+(y-cy)**2)<=r:
      hits=hits+1
      h1.append(x)
      h2.append(y)
    else:
      m1.append(x)
      m2.append(y)
      
  p=(hits/trials)*6.67   #Calculating PI value
  area=(hits/trials)*area_square  #calculate area
  print("value of trials",trials)
  print("value of PI=",p)
  print("Area :",area)
  area_list.append(area)    # collect area value in area list 
  PI_list.append(p)
  #Scatter
  print("Scatter :")
  plt.scatter(m1, m2, label = "Miss",color="Green")
  plt.scatter(h1, h2, label = "Hit",color="Red")
  plt.legend()
  plt.show()

#Bar Plotting
n1=["100","1000","5000","10000"]
# plotting a bar chart 
plt.bar(n1,PI_list,tick_label = n1, 
        width = .8, color = ['pink', 'orange']) 
  
# naming the x-axis 
plt.xlabel('Number Of trials') 
# naming the y-axis 
plt.ylabel('PI- value') 
# function to show the plot 
plt.show()

#Bar Plotting
n1=["100","1000","5000","10000"]
# plotting a bar chart 
plt.bar(n1,area_list,tick_label = n1, 
        width = .8, color = ['Black', 'Brown']) 
  
# naming the x-axis 
plt.xlabel('Number Of trials') 
# naming the y-axis 
plt.ylabel('Area of circle') 
# function to show the plot 
plt.show()